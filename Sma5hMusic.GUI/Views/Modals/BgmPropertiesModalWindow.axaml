<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="1200" Height="720" MinWidth="1200"  MinHeight="720"
        WindowStartupLocation="CenterOwner" ShowInTaskbar="False"
        x:Class="Sma5hMusic.GUI.Views.BgmPropertiesModalWindow"
        xmlns:fields="clr-namespace:Sma5hMusic.GUI.Views.Fields"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        Title="BGM Properties">
  <i:Interaction.Behaviors>
    <ia:EventTriggerBehavior EventName="Closing">
      <ia:InvokeCommandAction Command="{Binding ActionClosing}" CommandParameter="{Binding $self}"/>
    </ia:EventTriggerBehavior>
  </i:Interaction.Behaviors>
  <Window.Styles>
    <Style Selector=".content Button:pointerover">
      <Setter Property="Background" Value="Gray"/>
    </Style>
    <Style Selector=".content Button">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style Selector="ComboBox:pointerover">
      <Setter Property="BorderThickness" Value="1"/>
    </Style>
  </Window.Styles>

  <DockPanel Classes="modal" LastChildFill="True" HorizontalAlignment="Stretch">
    <Border Classes="headerTitle" DockPanel.Dock="Top">
      <TextBlock>Edit BGM Properties</TextBlock>
    </Border>
    <StackPanel Classes="modalActions" DockPanel.Dock="Bottom">
      <Button Content="Save Changes" Command="{Binding ActionOK}" CommandParameter="{Binding $parent[Window]}"></Button>
      <Button Content="Cancel" Command="{Binding ActionCancel}" CommandParameter="{Binding $parent[Window]}"></Button>
    </StackPanel>

    <!-- Properties -->
    <Grid>
      <TabControl Classes="content" TabStripPlacement="Bottom">
        <TabItem Header="General" FontSize="14">
          <Grid ColumnDefinitions="*,*,*" RowDefinitions="100,*">
            <!-- File Properties-->
            <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0" HorizontalAlignment="Stretch">
              <Border Classes="contentTitle" DockPanel.Dock="Top">
                <TextBlock>File Properties</TextBlock>
              </Border>
              <StackPanel Orientation="Horizontal">
                <fields:PropertyMusicField Label="File" Text="{Binding BgmPropertyViewModel.Filename, Mode=OneWay}" MusicPlayer="{Binding BgmPropertyViewModel.MusicPlayer, Mode=OneWay}" ToolTip="Path to the song in the File System" IsReadOnly="True" />
                <fields:PropertyField IsVisible="{Binding IsModSong}" Label="Actions" ToolTip="Execute actions exclusive to mod entries.">
                  <fields:PropertyField.FieldContent>
                    <StackPanel Orientation="Horizontal">
                      <Button Content="Change File..." Command="{Binding ActionChangeFile}" CommandParameter="{Binding BgmPropertyViewModel}" />
                      <Button Content="Calculate Loop Cues" Command="{Binding ActionCalculateLoopCues}" CommandParameter="{Binding BgmPropertyViewModel}" />
                    </StackPanel>
                  </fields:PropertyField.FieldContent>
                </fields:PropertyField>
              </StackPanel>
            </StackPanel>
            <!-- Song Information -->
            <StackPanel Classes="content" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch">
              <Border Classes="contentTitle" DockPanel.Dock="Top">
                <TextBlock>Song Information</TextBlock>
              </Border>
              <fields:PropertyTextField Label="Tone ID" Text="{Binding DbRootViewModel.ToneId, Mode=OneWay}" ToolTip="Unique ID of the song" IsReadOnly="True" />
              <fields:PropertyField x:Name="GameId" IsRequired="True" Label="Game" ToolTip="Game representing the song. If the game you want isn't in the database, click 'Add New Game Entry'">
                <fields:PropertyField.FieldContent>
                  <StackPanel>
                    <StackPanel Orientation="Horizontal">
                      <Button Content="Create New Game" Command="{Binding ActionNewGame}" CommandParameter="{Binding $parent[Window]}"/>
                      <ComboBox Classes="noBorder" IsVisible="{Binding DisplayRecents}" PlaceholderText="Use Recent Values..." SelectedItem="{Binding SelectedRecentAction, Mode=TwoWay}" Items="{Binding RecentGameTitles}">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding Title}" />
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                    </StackPanel>
                    <AutoCompleteBox Items="{Binding Games}" ValueMemberBinding="{Binding Title}" IsTextCompletionEnabled="True" MinimumPrefixLength="2"
                                   MinimumPopulateDelay="0.5" SelectedItem="{Binding SelectedGameTitleViewModel, Mode=TwoWay}" FilterMode="Contains"/>
                  </StackPanel>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyTextField IsRequired="True" IsVisible="{Binding DbRootViewModel.GameTitleViewModel, Converter={x:Static ObjectConverters.IsNotNull}}"
                                        Label="Series" Text="{Binding DbRootViewModel.SeriesViewModel.Title, Mode=OneWay}"
                                        ToolTip="Series associated with the game selected. This cannot be changed here." IsReadOnly="True" />
              <fields:PropertyTextField IsRequired="True" IsVisible="{Binding DbRootViewModel.GameTitleViewModel, Converter={x:Static ObjectConverters.IsNull}}"
                                        Label="Series" Text="Select a game"
                                        ToolTip="Series associated with the game selected. This cannot be changed here." IsReadOnly="True" />
              <fields:PropertyField IsRequired="True" Label="Record Type" ToolTip="Select a Record Type. Valid values are 'Original', 'Remix' and 'New Remix'">
                <fields:PropertyField.FieldContent>
                  <ComboBox SelectedItem="{Binding SelectedRecordType, Mode=TwoWay}" Items="{Binding RecordTypes}">
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
            </StackPanel>
            <!-- Song Labels -->
            <StackPanel Classes="content" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch">
              <Border Classes="contentTitle" DockPanel.Dock="Top">
                <TextBlock>Song Labels</TextBlock>
              </Border>
              <fields:PropertyField Label="Title" ToolTip="Title of the song.">
                <fields:PropertyField.FieldContent>
                  <ContentControl Content="{Binding MSBTTitleEditor}"/>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyField Label="Author" ToolTip="Author of the song.">
                <fields:PropertyField.FieldContent>
                  <ContentControl Content="{Binding MSBTAuthorEditor}"/>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyField Label="Copyright" ToolTip="Copyright of the song.">
                <fields:PropertyField.FieldContent>
                  <ContentControl Content="{Binding MSBTCopyrightEditor}"/>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
            </StackPanel>
            <!-- Advanced Options -->
            <StackPanel Classes="content" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch">
              <Border Classes="contentTitle" DockPanel.Dock="Top">
                <TextBlock>Advanced Options</TextBlock>
              </Border>
              <fields:PropertyField Label="Volume" ToolTip="Change the volume of the song in game.">
                <fields:PropertyField.FieldContent>
                  <Grid ColumnDefinitions="*,70">
                    <Slider TickFrequency="0.1" TickPlacement="Outside" IsSnapToTickEnabled="True" Minimum="{Binding MinimumVolume, Mode=OneTime}" Maximum="{Binding MaximumVolume, Mode=OneTime}" Orientation="Horizontal" Value="{Binding Path=BgmPropertyViewModel.AudioVolume, Mode=TwoWay}"/>
                    <StackPanel Grid.Column="1" Margin="2,15,5,0">
                      <TextBox Text="{Binding Path=BgmPropertyViewModel.AudioVolume, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                  </Grid>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyField Label="Sound Test" ToolTip="The song will be given an index and be sortable in the list of songs.">
                <fields:PropertyField.FieldContent>
                  <CheckBox IsChecked="{Binding IsInSoundTest}"/>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyField Label="Special Category" ToolTip="This option can be used in game to trigger different effects.">
                <fields:PropertyField.FieldContent>
                  <ComboBox SelectedItem="{Binding SelectedSpecialCategory, Mode=TwoWay}" Items="{Binding SpecialCategories}">
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding Label}" />
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
              <fields:PropertyField IsVisible="{Binding IsSpecialCategoryPinch}" Label="Pinch Song" ToolTip="The song will play during last stock or last minute. Make sure you pick an existing song!">
                <fields:PropertyField.FieldContent>
                  <AutoCompleteBox Items="{Binding AssignedInfoIds}" ValueMemberBinding="{Binding}" IsTextCompletionEnabled="True" MinimumPrefixLength="2"
                                   MinimumPopulateDelay="0.5" SelectedItem="{Binding StreamSetViewModel.Info1, Mode=TwoWay}" FilterMode="Contains"/>
                </fields:PropertyField.FieldContent>
              </fields:PropertyField>
            </StackPanel>
          </Grid>
        </TabItem>
      </TabControl>
    </Grid>
  </DockPanel>
</Window>
